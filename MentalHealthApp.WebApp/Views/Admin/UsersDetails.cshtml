@model (List<MentalHealthApp.Common.DTOs.EditUserDto > editUserDtos, int page)
@*@inject MentalHealthApp.BusinessLogic.Implementation.Account.ViewModels.UserVM user*@

<head>
    <meta content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no" name="viewport">
	<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/css/bootstrap.min.css">
	<link rel="stylesheet" href="https://pro.fontawesome.com/releases/v5.10.0/css/all.css">
	<link rel="stylesheet" type="text/css" href="~/css/style.css">
    <link rel="stylesheet" href="~/css/userDash.css"/>
        <link  rel="stylesheet" href="~/css/createAppointments.css"/>
    <!-- google font -->
    <link href="https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,400;0,500;0,600;0,700;0,800;1,200;1,300;1,400;1,500;1,600;1,700&display=swap" rel="stylesheet"> 
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">

    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/5.0.0-alpha1/css/bootstrap.min.css" integrity="sha384-r4NyP46KrjDleawBgD5tp8Y7UzmLA05oM1iAEQ17CSuDqnUK2+k9luXQOfXJCJ4I" crossorigin="anonymous">

</head>
<h1>User Info</h1>

<hr />
<body>

<div>
          <section class="breadcrumb-bar">
          <div class="container-fluid">
              <div class="row">
                  <div class="col-lg-12 col-md-12 col-12">
                      <nav class="page-breadcrum" aria-label="breadcrumb">
                            <ol class="breadcrumb">
                              <li class="breadcrumb-item"><a href="@Url.Action("Dashboard","Admin")">Dashboard</a></li>
                             <li class="breadcrumb-item active" aria-current="page">Users Details</li>

                              </ol>
                          </nav>
                    </div>
                </div>
                </div>
            </section>
<table style="margin-left: -10%;" class="table table-bordered table-hover table-striped table-sm">
    <thead class="thead-dark">
        <tr>
            <th>Last Name</th>
            <th>First Name</th>
            <th>Birth Date</th>
            <th>Email</th>
            <th>PhoneNumber</th>
            <th>Username</th>
            <th>Categorie</th>
            <th>Asigurat</th>
            <th>Tara</th>
            <th>Judet</th>
            <th>Oras</th>
            <th>Strada, Numar</th>
            <th>Bloc, Scara, Apartament</th>
            <th>Sector</th>
            <th>Cod Postal</th>
             <th>Actiuni</th>
               
    </tr>
     
        @foreach (var user in Model.editUserDtos)
        {
  
                <tr class="class-row" id="td-@user.Email" id="row-@user.Email" >
                    <td helper="LastName" >@user.LastName </td>
                    <td helper="FirstName">@user.FirstName</td>
                    <td helper="BirthDate">@user.BirthDate</td>
                    <td helper="Email">@user.Email</td>
                    <td helper="PhoneNumber">@user.PhoneNumber</td>
                    <td helper="Username">@user.Username</td>
                    <td helper="Categorie">@user.Categorie</td>
                    <td helper="Asigurat">@user.Asigurat</td>
                    <td helper="Tara">@user.Tara</td>
                    <td helper="Judet">@user.Judet</td>
                    <td helper="Oras">@user.Oras</td>
                    <td helper="StradaNumar">@user.StradaNumar</td>
                    <td helper="BlocScaraApartament">@user.BlocScaraApartament</td>
                    <td helper="Sector">@user.Sector</td>
                    <td helper="CodPostal">@user.CodPostal</td>
                    <td id="td-@user.Email">
                      <button class="delete-btn" data="@user.Email">Delete</button>
                      <a href="@Url.Action("EditUser", "Admin", new { email = @user.Email })" >Edit</a>
                    </td>
                    
                </tr>
                }
                 </thead>
                 <tbody>

                 </tbody>
            </table>
            <a class="btn btn-std mb-link"  asp-action="UsersPage" asp-controller="Admin" asp-route-page="@(Model.page - 1)" >Previous Page</a>
            <a   class="btn btn-std mb-link" asp-action="UsersPage" asp-controller="Admin" asp-route-page="@(Model.page + 1)">Next Page</a>
            <p id="page-number">Page @Model.page</p>
        
</div>
</body>

<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script>
     
    $(".delete-btn").on('click', function () {

        const userEmail = $(this).attr("data"); 

            $.ajax({

                url:'@Url.Action("DeleteUser", "Admin")',

                type:"DELETE",

                dataType:"json",

                data: { email: userEmail },

                success:function (data) {
                    console.log('deleted user ' + userEmail);
                   document.getElementById('row-'+ userEmail).remove();



                },

                error:function (response) {
                    console.log(JSON.stringify(response));
                }

            });

        });
       
let page = 0;
function NextPage() {
    page++;
    $.ajax({

                url:'@Url.Action("UsersNextPage", "Admin")',

                type:"GET",

                data: { page: page },

                success:function (response) {
                    let rows = document.getElementsByClassName("class-row");
                    for (let i = 0; i < rows.length; i++){ 
                        const newRow = response[i];
                        rows[i].setAttribute("data", "tr-" + newRow["Email"]);
                        for (let column = 0; column < rows[i].children.length; column++) {
                            let td = rows[i].children[column];
                            const helperAttr = td.getAttribute("helper");
                            if (!helperAttr || helperAttr === null) {
                                continue;
                            }
                            //if (helperAttr === "td-two-childrens") {
                            //    const childAttr = td.children[0].getAttribute("helper");
                            //    const helperLowerCase = childAttr.charAt(0).toLowerCase() + childAttr.slice(1);
                            //    const helper = newRow[helperLowerCase];
                            //    td.children[0].innerHTML = helper;
                            //}
                            //else {
                                const helperLowerCase = helperAttr.charAt(0).toLowerCase() + helperAttr.slice(1);
                                const helper = newRow[helperLowerCase];
                                td.innerHTML = helper;
                           // }
                            

                            
                        }
                    }
                    const pageNumber = document.getElementById("page-number");
                    pageNumber.innerHTML = "Page " + (page + 1);
                },

                error:function (response) {
                    console.log(JSON.stringify(response));
                }

            });
}

function PreviousPage() {
    page = page - 1;
    $.ajax({

        url: '@Url.Action("UsersNextPage", "Admin")',

        type: "GET",


        data: { page: page },

        success: function(response) {
            let rows = document.getElementsByClassName("class-row");
            for (let i = 0; i < rows.length; i++) {
                const newRow = response[i];
                rows[i].setAttribute("data", "tr-" + newRow["Email"]);
                for (let column = 0; column < rows[i].children.length; column++) {
                    let td = rows[i].children[column];
                    const helperAttr = td.getAttribute("helper");
                    if (!helperAttr || helperAttr === null) {
                        continue;
                    }
                    //if (helperAttr === "td-two-childrens") {
                    //    const childAttr = td.children[0].getAttribute("helper");
                    //    const helperLowerCase = childAttr.charAt(0).toLowerCase() + childAttr.slice(1);
                    //    const helper = newRow[helperLowerCase];
                    //    td.children[0].innerHTML = helper;
                    //}
                   // else {
                        const helperLowerCase = helperAttr.charAt(0).toLowerCase() + helperAttr.slice(1);
                        const helper = newRow[helperLowerCase];
                        td.innerHTML = helper;
                   // }



                }
            }
            const pageNumber = document.getElementById("page-number");
            pageNumber.innerHTML = "Page " + (page + 1);
        },
    
                error:function (response) {
                    console.log(JSON.stringify(response));
                }

            });
}

</script>

